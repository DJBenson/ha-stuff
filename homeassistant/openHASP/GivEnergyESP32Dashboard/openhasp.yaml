givenergy:
  objects:
    - obj: "p0b1"
      properties:
        "text": "{{ states('sensor.time') }}"
    - obj: "p0b2"
      properties:
        "text_color": "{% if -30 <= state_attr('openhasp.wt32_sc01_plus','rssi') |int %}green{% elif -31 > state_attr('openhasp.wt32_sc01_plus','rssi') |int >= -50 %}orange{% elif -51 > state_attr('openhasp.wt32_sc01_plus','rssi') |int >= -80 %}tomato{% else %}red{% endif %}"
    - obj: "p1b101" # battery SoC guage
      properties:
        "val": "{{ states('sensor.givtcp_YOURSERIAL_soc') | int if not (is_state('sensor.givtcp_YOURSERIAL_soc','unavailable')) }}"
    - obj: "p1b102" # grid load guage
      properties:
        "val": "{{ (states('sensor.givtcp_YOURSERIAL_import_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_import_power','unavailable')) }}"
    - obj: "p1b103" # house load guage
      properties:
        "val": "{{ (states('sensor.givtcp_YOURSERIAL_load_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_load_power','unavailable')) }}"
    - obj: "p1b104" # pv generation guage
      properties:
        "val": "{{ (states('sensor.givtcp_YOURSERIAL_pv_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_pv_power','unavailable')) }}"
    - obj: "p1b105" # grid load label
      properties:
        "text": "{{ (states('sensor.givtcp_YOURSERIAL_import_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_import_power','unavailable')) }} kWh"
    - obj: "p1b106" # house load label
      properties:
        "text": "{{ (states('sensor.givtcp_YOURSERIAL_load_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_load_power','unavailable')) }} kWh"
    - obj: "p1b107" # pv generation label
      properties:
        "text": "{{ (states('sensor.givtcp_YOURSERIAL_pv_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_pv_power','unavailable')) }} kWh"
    - obj: "p1b112" # battery charge status
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_battery_power')|int < 0  %}
          Charging
          {% elif states('sensor.givtcp_YOURSERIAL_battery_power')|int > 0  %}
          Discharging
          {% elif states('sensor.givtcp_YOURSERIAL_battery_power')|int == 0  %}
          Idle
          {% else %}
          --------
          {% endif %}
    - obj: "p1b113" # battery SoC label
      properties:
        "text": "{{ states('sensor.givtcp_YOURSERIAL_soc') | int if not (is_state('sensor.givtcp_YOURSERIAL_soc','unavailable')) }}%"
    - obj: "p1b114" # battery power label
      properties:
        "text": "{{ states('sensor.givtcp_YOURSERIAL_battery_power') | int if not (is_state('sensor.givtcp_YOURSERIAL_battery_power','unavailable')) }} kWh"
    - obj: "p2b208" # grid load label
      properties:
        "text": "{{ (states('sensor.givtcp_YOURSERIAL_import_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_import_power','unavailable')) }} kWh"
    - obj: "p2b209" # current unit rate label
      properties:
        "text": "{{ states('sensor.octopus_energy_electricity_18p2169495_1610014634663_current_rate')|float|round(2) if not (is_state('sensor.octopus_energy_electricity_18p2169495_1610014634663_current_rate','unavailable')) }}p/kWh"
    - obj: "p2b210" # battery power label
      properties:
        "text": "{{ (states('sensor.givtcp_YOURSERIAL_battery_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_battery_power','unavailable')) }} kWh"
    - obj: "p2b211" # battery power label
      properties:
        "text": "{{ states('sensor.givtcp_YOURSERIAL_soc') | int if not (is_state('sensor.givtcp_YOURSERIAL_soc','unavailable')) }}%"
    - obj: "p2b212" # battery charge status
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_battery_power')|int < 0  %}
          Charging
          {% elif states('sensor.givtcp_YOURSERIAL_battery_power')|int > 0  %}
          Discharging
          {% elif states('sensor.givtcp_YOURSERIAL_battery_power')|int == 0  %}
          Idle
          {% else %}
          --------
          {% endif %}
    - obj: "p2b213" # pv generation label
      properties:
        "text": "{{ states('sensor.givtcp_YOURSERIAL_pv_power')|int|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_pv_power','unavailable')) }} kWh"
    - obj: "p2b214" # house load label
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_load_power')|int < 1000  %}        
          {{ states('sensor.givtcp_YOURSERIAL_load_power')|int|round(0) if not (is_state('sensor.givtcp_YOURSERIAL_load_power','unavailable')) }}
          {% else %}
          {{ (states('sensor.givtcp_YOURSERIAL_load_power')|int / 1000)|round(2) if not (is_state('sensor.givtcp_YOURSERIAL_load_power','unavailable')) }}
          {% endif %}
    - obj: "p2b205" # house <-> grid arrow
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_import_power')|int < 0  %}
          {{ "\uE05D" | e }}
          {% elif states('sensor.givtcp_YOURSERIAL_import_power')|int > 0  %}
          {{ "\uE045" | e }}
          {% else %}
          {{ "\uE374" | e }}
          {% endif %}
    - obj: "p2b206" # battery <-> house arrow
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_battery_power')|int < 0  %}
          {{ "\uE045" | e }}
          {% elif states('sensor.givtcp_YOURSERIAL_battery_power')|int > 0  %}
          {{ "\uE05D" | e }}
          {% else %}
          {{ "\uE374" | e }}
          {% endif %}
    - obj: "p2b203" # battery soc icon
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_soc')|int >= 90 %}
          {{ "\uF2A3" | e }}
          {% elif states('sensor.givtcp_YOURSERIAL_soc')|int >= 50 and states('sensor.givtcp_YOURSERIAL_soc')|int < 90 %}
          {{ "\uF2A2" | e }}
          {% elif states('sensor.givtcp_YOURSERIAL_soc')|int > 10 and states('sensor.givtcp_YOURSERIAL_soc')|int < 50 %}
          {{ "\uF2A1" | e }}
          {% else %}
          {{ "\uE08E" | e }}
          {% endif %}
    - obj: "p2b204" # solar icon
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_pv_power')|int == 0 and states('sun.sun') == 'above_horizon' %}
          {{ "\uE590" | e }}
          {% elif states('sensor.givtcp_YOURSERIAL_pv_power')|int == 0 and states('sun.sun') == 'below_horizon' %}
          {{ "\uE594" | e }}
          {% else %}
          {{ "\uE5A8" | e }}
          {% endif %}
    - obj: "p2b207" # pv generation arrow
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_pv_power')|int == 0  %}
          {{ "\uE374" | e }}
          {% else %}
          {{ "\uE054" | e }}
          {% endif %}
    - obj: "p2b215" # house load unit label
      properties:
        "text": >
          {% if states('sensor.givtcp_YOURSERIAL_load_power')|int > 999  %}
          kWh
          {% else %}
          watts
          {% endif %}
